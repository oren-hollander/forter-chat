{"version":3,"file":"chat-view.js","sourceRoot":"","sources":["src/chat-view.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAA;AACtC,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAA;AACjD,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAA;AAGlD,IAAa,QAAQ,GAArB,MAAa,QAAS,SAAQ,UAAU;IAAxC;;QACU,SAAI,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,CAAA;IAQzC,CAAC;IANU,MAAM;QACb,OAAO,IAAI,CAAA;;aAEF,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAA,QAAQ,OAAO,QAAQ,CAAC;WAChE,CAAA;IACT,CAAC;CACF,CAAA;AATY,QAAQ;IADpB,aAAa,CAAC,WAAW,CAAC;GACd,QAAQ,CASpB;SATY,QAAQ","sourcesContent":["import { LitElement, html } from 'lit'\nimport { customElement } from 'lit/decorators.js'\nimport { ChatController } from './chat-controller'\n\n@customElement('chat-view')\nexport class ChatView extends LitElement {\n  private chat = new ChatController(this)\n\n  override render() {\n    return html`<div>\n      <h1>Chat</h1>\n      <div>${this.chat.messages.map(message => html`<div>${message}</div>`)}</div>\n    </div>`\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'chat-view': ChatView\n  }\n}\n"]}